package ca.csf.mobile2.tp2.question

import android.annotation.SuppressLint
import android.support.constraint.ConstraintLayout
import android.support.v7.app.AppCompatActivity
import android.util.Log
import android.view.View
import android.widget.*
import ca.csf.mobile2.tp2.R
import ca.csf.mobile2.tp2.databinding.ActivityQuestionBinding

import org.androidannotations.annotations.*

@SuppressLint("Registered") //Reason : Generated by Android Annotations
@DataBound
@EActivity(R.layout.activity_question)
class QuestionActivity : AppCompatActivity() {

    @ViewById(R.id.question_view)
    protected lateinit var questionLayout : ConstraintLayout
    @ViewById(R.id.answers_view)
    protected lateinit var answerLayout : ConstraintLayout
    @ViewById(R.id.error_view)
    protected lateinit var errorLayout : ConstraintLayout
    @ViewById(R.id.loading_view)
    protected lateinit var loadingLayout: FrameLayout

    @ViewById(R.id.choice1_button)
    protected lateinit var choice1Button : Button
    @ViewById(R.id.choice1_result_background)
    protected lateinit var choice1ResultBackground : View
    @ViewById(R.id.choice1_result_textview)
    protected lateinit var choice1ResultTextView : TextView
    @ViewById(R.id.choice1_textview)
    protected lateinit var choice1TextView: TextView

    @ViewById(R.id.choice2_button)
    protected lateinit var choice2Button: Button
    @ViewById(R.id.choice2_result_background)
    protected lateinit var choice2ResultBackground : View
    @ViewById(R.id.choice2_result_textview)
    protected lateinit var choice2ResultTextView : TextView
    @ViewById(R.id.choice2_textview)
    protected lateinit var choice2TextView: TextView

    @ViewById(R.id.error_imageview)
    protected lateinit var errorImageView : ImageView
    @ViewById(R.id.error_textview)
    protected lateinit var errorTextView : TextView
    @ViewById(R.id.retry_button)
    protected lateinit var retryButton : Button

    @ViewById(R.id.progressBar)
    protected lateinit var progressBar : ProgressBar
    @ViewById(R.id.toolbar)
    protected lateinit var toolbar : Toolbar

    @InstanceState
    protected lateinit var currentQuestion : Question

    @Bean
    protected lateinit var questionService : QuestionService

    @InstanceState
    protected lateinit var viewModelAct: QuestionActivityViewModel

    protected fun onCreate(@BindingObject dataBinder : ActivityQuestionBinding) {
        if(!this::viewModelAct.isInitialized) {
            viewModelAct = QuestionActivityViewModel()
            getRandomQuestion()
        }

        dataBinder.viewModel = viewModelAct

        choice1Button.visibility = View.VISIBLE
    }

    private fun getRandomQuestion() {
        viewModelAct.activityState = QuestionActivityState.Loading

        questionService.getRandomQuestion(
            this::onQuestionFound,
            this::onConnectivityError,
            this::onServerError
        )
    }

    @UiThread
    protected fun onQuestionFound(question : Question) {
        currentQuestion = question

        viewModelAct.question = question
        viewModelAct.activityState = QuestionActivityState.Question
    }

    @UiThread
    protected fun onConnectivityError() {
        viewModelAct.activityState = QuestionActivityState.Error
        viewModelAct.isConnectivityError = true
    }

    protected fun onServerError() {
        viewModelAct.activityState = QuestionActivityState.Error
        viewModelAct.isConnectivityError = false
    }

    @Click(R.id.retry_button)
    protected fun onRetryClick() {
        viewModelAct.activityState = QuestionActivityState.Loading

        getRandomQuestion()
    }
}
